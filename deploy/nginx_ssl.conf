worker_processes auto ;
events {
    # This is the limit of no of max files opened by the user
    # on linux this can be checked by command "ulimit -n"
    # This limit can be changed by the user by playing around with ulimit command
    # People have taken this ulimit command and set it to 9000
    # So this basically determines how many clients will be served per cpu
    # Max Clients = worker_processes * worker_connections
    # This max clients is also limited/bottlenecked by no of available sockets connection on computer (64k)
    worker_connections 1024 ;
}

http {


        # Sea Shell Server
        server{

            server_name www.seashellresorts.com  seashellresorts.com ;


            location / {
                proxy_pass "https://rfg24.s3.ap-south-1.amazonaws.com/seashell/src/html/production/home.html" ;
            }
            location /gallery {
                proxy_pass "https://rfg24.s3.ap-south-1.amazonaws.com/seashell/src/html/production/gallery.html" ;
            }
            location /pelican {
                proxy_pass "https://rfg24.s3.ap-south-1.amazonaws.com/seashell/src/html/production/pelican.html" ;
            }
            location /about {
                proxy_pass "https://rfg24.s3.ap-south-1.amazonaws.com/seashell/src/html/production/about-us.html" ;
            }

            listen 443 ssl http2;
            ssl_certificate         /etc/ssl/certs/cloudflare_ssl_pubkey_20240809.pem;
            ssl_certificate_key     /etc/ssl/private/cloudflare_ssl_pvtkey_20240809.pem;
            ssl_verify_client on;
            ssl_client_certificate  /etc/ssl/certs/cloudflare_origin_pull.crt;
        }


        # adding this redirects your http traffic to https in nginx, but some services like cloudflare do this automatically.
        # nonetheless its a good habbit to add this
        server{
                if ($host = www.seashellresorts.com) {
                    return 301 https://$host$request_uri;
                }

                server_name www.seashellresorts.com ;
                listen 80;
                return 404;
            }

}



